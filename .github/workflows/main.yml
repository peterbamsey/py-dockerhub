name: build images
on:
  schedule:
    - cron: '15 22 * * *'
  push:
    branches: [ main ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ main ]

jobs:
  matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: "3.9"
    - name: Install dependencies
      run: |
        sudo apt-get install -y jq
        python -m pip install --upgrade pip
        pip install pipenv
    - id: set-matrix
      run: |
        pipenv install
        matrix=$(pipenv run python main.py --get-build-configs)
        echo "::set-output name=matrix::$matrix"
        echo $matrix | jq

  check-matrix:
    runs-on: ubuntu-latest
    needs: matrix
    steps:
      - name: Install json2yaml
        run: |
          sudo npm install -g json2yaml

      - name: Check matrix definition
        run: |
          matrix='${{ needs.matrix.outputs.matrix }}'
          echo $matrix
          echo $matrix | jq .
          echo $matrix | json2yaml

  build:
    runs-on: ubuntu-latest
    needs: matrix
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.matrix.outputs.matrix)}}
    steps:
    - name: Debug
      run: |
        echo ${{ needs.matrix.outputs.matrix }}
        echo ${{ fromJson(needs.matrix.outputs.matrix) }}
        echo ${{ matrix.Dockerfile }}
        echo ${{ matrix.version }}
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: "3.9"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pipenv
    - name: Build images
      run: |
        pipenv install
        pipenv run python main.py --build-image --docker-file ${{ matrix.Dockerfile }} --build-args "VERSION=${{matrix.version}}"
